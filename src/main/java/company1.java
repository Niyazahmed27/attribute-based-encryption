
import java.sql.*;
import java.util.*;
import java.io.*;
import java.math.BigInteger;
import java.net.*;
import com.sun.management.OperatingSystemMXBean;
import java.lang.management.ManagementFactory;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author hiiqm
 */
public class company1 extends javax.swing.JFrame {

    Socket s;
     ServerSocket ss;
    
    /**
     * Creates new form company1
     */
    public company1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ta1 = new javax.swing.JTextArea();
        clear = new javax.swing.JButton();
        send = new javax.swing.JButton();
        tf3 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("company 1");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ta1.setColumns(20);
        ta1.setRows(5);
        jScrollPane1.setViewportView(ta1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 820, 140));

        clear.setBackground(new java.awt.Color(51, 153, 255));
        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 470, 140, 40));

        send.setBackground(new java.awt.Color(51, 153, 255));
        send.setText("SEND");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });
        getContentPane().add(send, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 470, 120, 40));

        tf3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf3ActionPerformed(evt);
            }
        });
        getContentPane().add(tf3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 360, 150, 40));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "company 1", "company 2", "company 3", "company 4", "company 5" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 180, 40));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "minimum protection", "maximum protection" }));
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 360, 200, 40));

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setText("browser");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 460, 100, 50));

        jLabel2.setIcon(new javax.swing.ImageIcon("D:\\pmc\\pmc report\\complete\\niyash\\maninmiddle\\maninmiddle\\company.JPG")); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-50, 0, 880, 580));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        // TODO add your handling code here:
         send1();
    }//GEN-LAST:event_sendActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void tf3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf3ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
         OperatingSystemMXBean osBean =(OperatingSystemMXBean) ManagementFactory.getOperatingSystemMXBean();
           
          long totalMemory = osBean.getTotalMemorySize();
           int processor = osBean.getAvailableProcessors();
    ta1.append("\ntotal memory=> "+totalMemory);
    ta1.append("\nprocessor=> "+processor);     
    }//GEN-LAST:event_clearActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    
    
    
    
    ////////////////////////////////jbuttonactionperformed ends
    
    ///////////insdb connect
    ///
    ///
    ///
    public void ins()
    {
        try
        {
            
         Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/db", "root", "system");
 PreparedStatement ps = null;
            
           String query = "INSERT INTO reg  VALUES (?)";
            ps = con.prepareStatement(query);
 
           String sd=  tf3.getText();
            ps.setString(1,tf3.getText() );
            ps.executeUpdate();
            ps.close();
            con.close();
           
        }
        catch(Exception e)
        {
            System.out.println("send1 ex=>"+e);
        }
    
   
    }
    
    
    
    
    
    
    
     ///////////insdb connect
    ///
    ///
    ///
    public void retr()
    {
        try
        {
            
         Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db", "root", "system");
 PreparedStatement ps = null;
            
           String sql = "SELECT * FROM reg ";
           ps = conn.prepareStatement(sql);
            

            ResultSet rs = ps.executeQuery();

           while (rs.next()) {
                // Successful login
                String fullName = rs.getString(1);
                ta1.append("\nvector=> "+fullName);
            }
            ps.close();
            conn.close();
           
        }
        catch(Exception e)
        {
            System.out.println("send1 ex=>"+e);
        }
    
   
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
       public void send1()
    {
        try
        {
            if(jComboBox1.getSelectedItem().toString().equals("company 1"))
            send(5001,"localhost");
            if(jComboBox1.getSelectedItem().toString().equals("company 2"))
            send(5002,"localhost");
        
        
        }
        catch(Exception e)
        {
            System.out.println("send1 ex=>"+e);
        }
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /////////////////////////send start//////////
    
     
     public void send(int port,String ip)
    {
        try
        {
          String sd=  tf3.getText();
    
     
             s=new Socket(ip,port);
            System.out.println("connect");
       
          
       ObjectOutputStream out=new ObjectOutputStream(s.getOutputStream());
          Vector vec1 = new Vector() ;
           
           long keyval1=1269;
			    ECIES crypt;



	            ECDomainParameters dp = ECDomainParameters.NIST_B_163();
            	ECPrivKey skA = new ECPrivKey(dp, BigInteger.valueOf(keyval1));
				System.out.println("the value skA is  "+skA);
                            
				ECPubKey pkA = new ECPubKey(skA);
                                System.out.println(sd);
				crypt = new ECIES(skA, pkA, sd.getBytes()); // encrypt the data
				    System.out.println("the encrypted value is "+crypt);
                                    
          vec1.add(0,crypt);
     vec1.add(1,jComboBox2.getSelectedItem().toString());
       
       out.writeObject(vec1);
       
       
       
       
        ObjectInputStream inn=new ObjectInputStream(s.getInputStream());
                        String b =(String) inn.readObject();
                        System.out.println(b);
    
	out.flush();
	out.close();
	s.close();
        
        
                
        
        }
        catch( Exception exe)
        {
            System.out.println(exe+"fbex");
        }
    }
     
     
    
    /////////////////////////send end//////////
    
    
    
    
    /////////////////////////server start//////////
    
     
   
    public void sstart()
    {
       
         try{
             
      ss =new ServerSocket(5001);
        String data;
         System.out.println("listening");
         
         while(true)
         {
              s=ss.accept();
	ObjectInputStream inn=new ObjectInputStream(s.getInputStream());
   Vector   vec1=(Vector)inn.readObject();
   
   
      System.out.println("the received values is"+vec1);
    
      
    
      String datarecd2=vec1.get(1).toString();
    ECIES datarecd=(ECIES)vec1.get(0);
      if(datarecd2.equals("minimum protection"))
      {
  long keyval1=1269;
     ECDomainParameters dp = ECDomainParameters.NIST_B_163();
			ECPrivKey skA = new ECPrivKey(dp, BigInteger.valueOf(keyval1));
     DerIOBuffer der = new DerIOBuffer(datarecd);
					ECIES decrypt = der.toECIES();
					byte[] pt1 = decrypt.decrypt(skA); // decrypt the data
					String str1 = new String(pt1);
					System.out.println("the data is"+str1);
     
    
     
     ta1.append("\nvector=> "+str1);
         
      }
        if(datarecd2.equals("maximum protection"))
      {
           OperatingSystemMXBean osBean =(OperatingSystemMXBean) ManagementFactory.getOperatingSystemMXBean();
           
          long totalMemory = osBean.getTotalMemorySize();
          
            ta1.append("\ntotal memory=> "+totalMemory);
         String h=totalMemory+"";
         if(h.equals("1692892"))
         {
    long keyval1=1269;
     ECDomainParameters dp = ECDomainParameters.NIST_B_163();
			ECPrivKey skA = new ECPrivKey(dp, BigInteger.valueOf(keyval1));
     DerIOBuffer der = new DerIOBuffer(datarecd);
					ECIES decrypt = der.toECIES();
					byte[] pt1 = decrypt.decrypt(skA); // decrypt the data
					String str1 = new String(pt1);
					System.out.println("the data is"+str1);
     
    
     
     ta1.append("\nvector=> "+str1);
         }
         else
         {
            ta1.append("\nAttribute verification failure=>cannot decrypt ");  
         }
      }
   
         
     ObjectOutputStream dis=new ObjectOutputStream(s.getOutputStream());
     dis.writeObject("ack");
   
         }
        }
        catch(Exception e)
        {
           System.out.println(e); 
        }
    }
   
    
    
    
     
    
    /////////////////////////server end//////////
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(company1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(company1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(company1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(company1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        company1 obj = new company1();
        obj.setVisible(true);
        obj.sstart();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton send;
    private javax.swing.JTextArea ta1;
    private javax.swing.JTextField tf3;
    // End of variables declaration//GEN-END:variables
}
